<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dodopal.oss.business.dao.ClearingMerMapper">
	
	<select id="findMerClearingResultByPage" resultType="ClearingMer" parameterType="MerClearingResultQuery">
				SELECT A.ID,
		       A.CLEARINGDAY,
		       A.CLEARINGDATE,
		       A.MERCODE,
		       A.MERNAME,
		       MERCHANT.MER_NAME as parentMerName,
		       A.TRADECOUNT,
		       A.TRADEAMOUNT,
		       A.SERVICEFEE,
		       A.MERPROFIT,
		       A.REALFEE,
		       A.TRANSFERAMOUNT,
		       A.CREATEDATE
		  FROM (select t.id 							as id,
				       t.clearling_day 					as clearingDay,
				       t.clearling_date 				as clearingDate,
				       t.mer_code 						as merCode,
				       t.mer_name 						as merName,
				       NVL(t.trade_count, 0) 			as tradeCount,
				       NVL(t.trade_amount, 0)/100 		as tradeAmount,
				       NVL(t.service_fee, 0)/100 		as serviceFee,
				       NVL(t.mer_profit, 0)/100 		as merProfit,
				       NVL(t.real_fee, 0)/100 			as realFee,
				       NVL(t.transfer_amount, 0)/100 	as transferAmount,
				       t.create_date 					as createDate,
				       MER.MER_PARENT_CODE
				  from clearing_mer t 
				  LEFT JOIN MERCHANT MER
		            ON T.MER_CODE = MER.MER_CODE
		 <where>
		 	<if test="clearingDayStart != null and clearingDayStart !=''">
				<![CDATA[ and TO_DATE(T.clearling_day,'yyyy-mm-dd')>= TO_DATE(#{clearingDayStart},'yyyy-mm-dd')]]>
			</if>
			<if test="clearingDayEnd != null and clearingDayEnd !=''">
				<![CDATA[ and TO_DATE(T.clearling_day,'yyyy-mm-dd')<= TO_DATE(#{clearingDayEnd},'yyyy-mm-dd')]]>
			</if>
		</where>) A
		  LEFT JOIN MERCHANT MERCHANT
    	ON A.MER_PARENT_CODE = MERCHANT.MER_CODE
		order by A.clearingDay desc
	</select>
	
	<select id="getMerClearingResultForExport" resultType="ClearingMer" parameterType="MerClearingResultQuery">
					SELECT A.ID,
			       A.CLEARINGDAY,
			       A.CLEARINGDATE,
			       A.MERCODE,
			       A.MERNAME,
			       MERCHANT.MER_NAME as parentMerName,
			       A.TRADECOUNT,
			       A.TRADEAMOUNT,
			       A.SERVICEFEE,
			       A.MERPROFIT,
			       A.REALFEE,
			       A.TRANSFERAMOUNT,
			       A.CREATEDATE
			  FROM (select t.id 							as id,
					       t.clearling_day 					as clearingDay,
					       t.clearling_date 				as clearingDate,
					       t.mer_code 						as merCode,
					       t.mer_name 						as merName,
					       NVL(t.trade_count, 0) 			as tradeCount,
					       NVL(t.trade_amount, 0)/100 		as tradeAmount,
					       NVL(t.service_fee, 0)/100 		as serviceFee,
					       NVL(t.mer_profit, 0)/100 		as merProfit,
					       NVL(t.real_fee, 0)/100 			as realFee,
					       NVL(t.transfer_amount, 0)/100 	as transferAmount,
					       t.create_date 					as createDate,
					       MER.MER_PARENT_CODE
					  from clearing_mer t 
					  LEFT JOIN MERCHANT MER
			            ON T.MER_CODE = MER.MER_CODE
		 <where>
		 	<if test="clearingDayStart != null and clearingDayStart !=''">
				<![CDATA[ and TO_DATE(clearling_day,'yyyy-mm-dd')>= TO_DATE(#{clearingDayStart},'yyyy-mm-dd')]]>
			</if>
			<if test="clearingDayEnd != null and clearingDayEnd !=''">
				<![CDATA[ and TO_DATE(clearling_day,'yyyy-mm-dd')<= TO_DATE(#{clearingDayEnd},'yyyy-mm-dd')]]>
			</if>
		</where>) A
		  LEFT JOIN MERCHANT MERCHANT
    	ON A.MER_PARENT_CODE = MERCHANT.MER_CODE
		order by A.clearingDay desc
	</select>
</mapper>