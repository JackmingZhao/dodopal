<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dodopal.oss.business.dao.CardRechargeMapper">
	<sql id="sqlColumn">
		C.ID as id,
		C.ORDER_NO as orderNo,
		C.ORDER_DATE as orderDate,
		C.CUSTOMER_NO as customerNo,
		C.CUSTOMER_NAME as customerName,
		C.CUSTOMER_TYPE as customerType,
		C.ORDER_FROM as orderFrom,
		C.ORDER_AMOUNT as orderAmount,
		C.CUSTOMER_RATE_TYPE as customerRateType,
		C.CUSTOMER_RATE as customerRate,
		C.CUSTOER_REAL_PAY_AMOUNT as custoerRealPayAmount ,
		C.CUSTOMER_SHOULD_PROFIT as customerShouldProfit,
		C.DDP_GET_MERCHANT_PAY_FEE as ddpGetMerchantPayFee,
		C.SERVICE_RATE_TYPE as serviceRateType,
		C.SERVICE_RATE as serviceRate,
		C.PAY_GATEWAY as payGateway,
		C.PAY_TYPE as payType,
		C.PAY_WAY_NAME as payWayName,
		C.DDP_SUPPLIER_RATE as ddpSupplierRate,
		C.SUPPLIER_TO_DDP_SHOULD_REBATE as supplierToDdpShouldRebate,
		C.SUPPLIER_TO_DDP_REAL_REBATE as supplierToDdpRealRebate,
		C.DDP_BANK_RATE  AS  ddpBankRate,
		C.DDP_TO_BANK_FEE as ddpToBankFee,
		C.SUPPLIER_NAME as supplierName,
		P.PRO_ORDER_STATES as proOrderStates,
		P.PRO_INNER_STATES as proInnerStates
	</sql>
	
	
	<sql id="sqlExcelColumn">                                                                       
		 C.ID                                 AS  ID                              ,
		 C.ORDER_NO                           AS  orderNo                         ,
		 C.ORDER_DATE                         AS  orderDate                       ,
		 C.ORDER_DAY                          AS  orderDay                        ,
		 C.CUSTOMER_NO                        AS  customerNo                      ,
		 C.CUSTOMER_NAME                      AS  customerName                    ,
		 C.CUSTOMER_TYPE                      AS  customerType                    ,
		 C.BUSINESS_TYPE                      AS  businessType                    ,
		 C.CUSTOMER_RATE_TYPE                 AS  customerRateType                ,
		 C.CUSTOMER_RATE                      AS  customerRate                    ,
		 C.ORDER_AMOUNT                       AS  orderAmount                     ,
		 C.CUSTOER_REAL_PAY_AMOUNT            AS  custoerRealPayAmount            ,
		 C.CUSTOMER_SHOULD_PROFIT             AS  customerShouldProfit            ,
		 C.CUSTOMER_REAL_PROFIT               AS  customerRealProfit              ,
		 C.CUSTOMER_ACCOUNT_SHOULD_AMOUNT     AS  customerAccountShouldAmount     ,
		 C.CUSTOMER_ACCOUNT_REAL_AMOUNT       AS  customerAccountRealAmount       ,
		 C.CUSTOMER_CLEARING_FLAG             AS  customerClearingFlag            ,
		 C.CUSTOMER_CLEARING_TIME             AS  customerClearingTime            ,
		 C.CUSTOMER_SETTLEMENT_FLAG           AS  customerSettlementFlag          ,
		 C.CUSTOMER_SETTLEMENT_TIME           AS  customerSettlementTime          ,
		 C.DDP_GET_MERCHANT_PAY_FEE           AS  ddpGetMerchantPayFee            ,
		 C.DDP_TO_CUSTOMER_REAL_FEE           AS  ddpToCustomerRealFee            ,
		 C.SUB_MERCHANT_CODE                  AS  subMerchantCode                 ,
		 C.SUB_MERCHANT_NAME                  AS  subMerchantName                 ,
		 C.SUB_MERCHANT_SHOULD_PROFIT         AS  subMerchantShouldProfit         ,
		 C.PAY_GATEWAY                        AS  payGateway                      ,
		 C.PAY_TYPE                           AS  payType                         ,
		 C.PAY_WAY                            AS  payWay                          ,
		 C.SERVICE_RATE_TYPE                  AS  serviceRateType                 ,
		 C.SERVICE_RATE                       AS  serviceRate                     ,
		 C.DDP_BANK_RATE                      AS  ddpBankRate                     ,
		 C.DDP_TO_BANK_FEE                    AS  ddpToBankFee                    ,
		 C.DDP_FROM_BANK_SHOULD_FEE           AS  ddpFromBankShouldFee            ,
		 C.DDP_FROM_BANK_REAL_FEE             AS  ddpFromBankRealFee              ,
		 C.BANK_CLEARING_FLAG                 AS  bankClearingFlag                ,
		 C.BANK_CLEARING_TIME                 AS  bankClearingTime                ,
		 C.BANK_SETTLEMENT_FLAG               AS  bankSettlementFlag              ,
		 C.BANK_SETTLEMENT_TIME               AS  bankSettlementTime              ,
		 C.SUPPLIER_CODE                      AS  supplierCode                    ,
		 C.SUPPLIER_NAME                      AS  supplierName                    ,
		 C.CITY_CODE                          AS  cityCode                        ,
		 C.CITY_NAME                          AS  cityName                        ,
		 C.DDP_TO_SUPPLIER_SHOULD_AMOUNT      AS  ddpToSupplierShouldAmount       ,
		 C.DDP_TO_SUPPLIER_REAL_AMOUNT        AS  ddpToSupplierRealAmount         ,
		 C.DDP_SUPPLIER_RATE                  AS  ddpSupplierRate                 ,
		 C.SUPPLIER_TO_DDP_SHOULD_REBATE      AS  supplierToDdpShouldRebate       ,
		 C.SUPPLIER_TO_DDP_REAL_REBATE        AS  supplierToDdpRealRebate         ,
		 C.SUPPLIER_CLEARING_FLAG             AS  supplierClearingFlag            ,
		 C.SUPPLIER_CLEARING_TIME             AS  supplierClearingTime            ,
		 C.SUPPLIER_SETTLEMENT_FLAG           AS  supplierSettlementFlag          ,
		 C.SUPPLIER_SETTLEMENT_TIME           AS  supplierSettlementTime          ,
		 C.ORDER_FROM                         AS  orderFrom                       ,
		 C.ORDER_CIRCLE                       AS  orderCircle                     ,
		 C.TOP_MERCHANT_PROFIT_FLAG           AS  topMerchantProfitFlag           ,
		 C.PAY_WAY_NAME                       AS  payWayName                      ,
		 C.DATA_FLAG                          AS  dataflag                 	  	  ,
	</sql>
	
	
	<select id="findCardRechargeByPage" resultType="CardRecharge" resultMap="cardRechargeResultMap" parameterType="CardRechargeQuery">
		select <include refid="sqlColumn" /> from CLEARING_BASIC_DATA C ,PRD_ORDER P where C.ORDER_NO = P.PRO_ORDER_NUM AND 
			(C.SUPPLIER_CLEARING_FLAG = #{supplierClearingFlag} OR C.CUSTOMER_CLEARING_FLAG =#{customerClearingFlag}) 
			AND C.BUSINESS_TYPE = #{businessType} 
		<if test="sDate != null and sDate !=''">
			<![CDATA[and TO_DATE(TO_CHAR(C.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')  >=TO_DATE(TO_CHAR(#{sDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
		</if>
		<if test="eDate != null and eDate !=''">
			<![CDATA[and TO_DATE(TO_CHAR(C.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')  <=TO_DATE(TO_CHAR(#{eDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
		</if>
		<if test="customerName != null and customerName !=''">
			and C.CUSTOMER_NAME like '%'||#{customerName}||'%' 
		</if>
		<if test="orderNo != null and orderNo !=''">
			and instr(C.ORDER_NO,#{orderNo}) > 0  
		</if>
		ORDER BY C.ORDER_DATE DESC
	</select>
	
	<select id="findCardRecharge" resultType="CardRecharge" resultMap="cardRechargeResultMap" parameterType="java.lang.String">
		select <include refid="sqlColumn" /> from CLEARING_BASIC_DATA C ,PRD_ORDER P where C.ORDER_NO = P.PRO_ORDER_NUM AND C.ID = #{id}
	</select>
	
	<!-- 查询一卡通充值异常清分记录总数 -->
	<select id="findCardRechargeCount" resultType="java.lang.Integer" parameterType="CardRechargeQuery">
           select count(*) from CLEARING_BASIC_DATA C ,PRD_ORDER P where C.ORDER_NO = P.PRO_ORDER_NUM AND 
			(C.SUPPLIER_CLEARING_FLAG = #{supplierClearingFlag} OR C.CUSTOMER_CLEARING_FLAG =#{customerClearingFlag}) 
			AND C.BUSINESS_TYPE = #{businessType} 
		<if test="sDate != null and sDate !=''">
			<![CDATA[and TO_DATE(TO_CHAR(C.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')  >=TO_DATE(TO_CHAR(#{sDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
		</if>
		<if test="eDate != null and eDate !=''">
			<![CDATA[and TO_DATE(TO_CHAR(C.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')  <=TO_DATE(TO_CHAR(#{eDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
		</if>
		<if test="customerName != null and customerName !=''">
			and C.CUSTOMER_NAME like '%'||#{customerName}||'%' 
		</if>
		<if test="orderNo != null and orderNo !=''">
			and instr(C.ORDER_NO,#{orderNo}) > 0  
		</if>
		ORDER BY C.ORDER_DATE DESC
    </select>
	
	<!-- 获取导出一卡通充值异常清分数据集合 -->
	<select id="findCardRechargeExcel" resultType="com.dodopal.oss.business.model.CardRechargeDTO" parameterType="CardRechargeQuery">
           select <include refid="sqlExcelColumn" /> P.PRO_ORDER_STATES as proOrderStates,
		   P.PRO_INNER_STATES as proInnerStates from CLEARING_BASIC_DATA C ,PRD_ORDER P where C.ORDER_NO = P.PRO_ORDER_NUM AND 
			(C.SUPPLIER_CLEARING_FLAG = #{supplierClearingFlag} OR C.CUSTOMER_CLEARING_FLAG =#{customerClearingFlag}) 
			AND C.BUSINESS_TYPE = #{businessType} 
		<if test="sDate != null and sDate !=''">
			<![CDATA[and TO_DATE(TO_CHAR(C.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')  >=TO_DATE(TO_CHAR(#{sDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
		</if>
		<if test="eDate != null and eDate !=''">
			<![CDATA[and TO_DATE(TO_CHAR(C.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')  <=TO_DATE(TO_CHAR(#{eDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
		</if>
		<if test="customerName != null and customerName !=''">
			and C.CUSTOMER_NAME like '%'||#{customerName}||'%' 
		</if>
		<if test="orderNo != null and orderNo !=''">
			and instr(C.ORDER_NO,#{orderNo}) > 0  
		</if>
		ORDER BY C.ORDER_DATE DESC
    </select>
	
	<!-- 查询一卡通消费清分记录总数
	<select id="queryCardConsumeClearingCount" resultType="CardConsumeClearing" resultMap="cardConsumeClearingResultMap" parameterType="CardConsumeClearingQuery">
		select  count(*) 
		from CLEARING_BASIC_DATA t ,PRD_PURCHASE_ORDER prd,PRD_PURCHASE_ORDER_RECORD y 
		where t.order_no = prd.ORDER_NUM and y.ORDER_NUM = prd.ORDER_NUM and
			 t.BUSINESS_TYPE='03'  and (t.CUSTOMER_CLEARING_FLAG = '2'  or t.BANK_CLEARING_FLAG='2') 
       		 <if test="clearingStartDate != null and clearingStartDate !=''">
			 <![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')>= TO_DATE(TO_CHAR(#{clearingStartDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if>
			<if test="clearingEndDate != null and clearingEndDate !=''">
			<![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')<= TO_DATE(TO_CHAR(#{clearingEndDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if> 
       		<if test="customerName != null and customerName !=''">   
           	 AND t.CUSTOMER_NAME like '%'||#{customerName}||'%'
       		</if>
			<if test="orderNo != null and orderNo !=''">  
			AND instr(t.ORDER_NO,#{orderNo}) > 0  
       		</if>            
    	ORDER by t.ID DESC 
	</select> 
	 -->
	<!-- 查询一卡通消费清分数据集合 
	<select id="queryCardConsumeClearingExcel" resultType="CardConsumeClearing" resultMap="cardConsumeClearingResultMap" parameterType="CardConsumeClearingQuery">
		select  <include refid="sqlExcelColumn" />  prd.STATES as TRAN_OUT_STATUS, y.INNER_STATES as TRAN_IN_STATUS,
		from CLEARING_BASIC_DATA t ,PRD_PURCHASE_ORDER prd,PRD_PURCHASE_ORDER_RECORD y 
		where t.order_no = prd.ORDER_NUM and y.ORDER_NUM = prd.ORDER_NUM and
			 t.BUSINESS_TYPE='03'  and (t.CUSTOMER_CLEARING_FLAG = '2'  or t.BANK_CLEARING_FLAG='2') 
       		 <if test="clearingStartDate != null and clearingStartDate !=''">
			 <![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')>= TO_DATE(TO_CHAR(#{clearingStartDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if>
			<if test="clearingEndDate != null and clearingEndDate !=''">
			<![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')<= TO_DATE(TO_CHAR(#{clearingEndDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if> 
       		<if test="customerName != null and customerName !=''">   
           	 AND t.CUSTOMER_NAME like '%'||#{customerName}||'%'
       		</if>
			<if test="orderNo != null and orderNo !=''">  
			AND instr(t.ORDER_NO,#{orderNo}) > 0  
       		</if>            
    	ORDER by t.ID DESC 
	</select> 
	-->
	<!-- 账户充值异常清分总计路数 
	<select id="queryAcctRechargeClearingCount" resultType="AcctReChargeClearing" resultMap="acctReChargeClearingResultMap" parameterType="AcctReChargeClearingQuery">
		select count(*) from CLEARING_BASIC_DATA t left join PAY_TRATRANSACTION y on y.ORDER_NUMBER = t.ORDER_NO  
		 where
			 t.BUSINESS_TYPE='99' and y.TRAN_TYPE='1' and  t.CUSTOMER_CLEARING_FLAG = '2'  
       		 <if test="clearingStartDate != null and clearingStartDate !=''">
			 <![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')>= TO_DATE(TO_CHAR(#{clearingStartDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if>
			<if test="clearingEndDate != null and clearingEndDate !=''">
			<![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')<= TO_DATE(TO_CHAR(#{clearingEndDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if> 
       		<if test="customerName != null and customerName !=''">   
           	 AND t.CUSTOMER_NAME like '%'||#{customerName}||'%'
       		</if>
			<if test="orderNo != null and orderNo !=''">   
           	  AND instr(t.ORDER_NO,#{orderNo}) > 0  
       		</if>
    	ORDER by t.ID DESC 
	</select> 
	-->
	<!-- 账户充值异常清分导出记录数
	<select id="queryAcctRechargeClearingExcel" resultType="AcctReChargeClearing" resultMap="acctReChargeClearingResultMap" parameterType="AcctReChargeClearingQuery">
		select <include refid="sqlExcelColumn" /> 
		 from CLEARING_BASIC_DATA t left join PAY_TRATRANSACTION y on y.ORDER_NUMBER = t.ORDER_NO  
		 where
			 t.BUSINESS_TYPE='99' and y.TRAN_TYPE='1' and  t.CUSTOMER_CLEARING_FLAG = '2'  
       		 <if test="clearingStartDate != null and clearingStartDate !=''">
			 <![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')>= TO_DATE(TO_CHAR(#{clearingStartDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if>
			<if test="clearingEndDate != null and clearingEndDate !=''">
			<![CDATA[ and TO_DATE(TO_CHAR(t.ORDER_DATE,'yyyy-mm-dd'),'yyyy-mm-dd')<= TO_DATE(TO_CHAR(#{clearingEndDate},'yyyy-mm-dd'),'yyyy-mm-dd')]]>
			</if> 
       		<if test="customerName != null and customerName !=''">   
           	 AND t.CUSTOMER_NAME like '%'||#{customerName}||'%'
       		</if>
			<if test="orderNo != null and orderNo !=''">   
           	  AND instr(t.ORDER_NO,#{orderNo}) > 0  
       		</if>
    	ORDER by t.ID DESC 
	</select> 
	-->
</mapper>
	






